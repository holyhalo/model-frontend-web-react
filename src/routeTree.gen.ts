/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './@routes/__root'

// Create Virtual Routes

const ProfileRouteLazyImport = createFileRoute('/profile')()
const AboutRouteLazyImport = createFileRoute('/about')()
const IndexRouteLazyImport = createFileRoute('/')()
const SettingsIndexRouteLazyImport = createFileRoute('/settings/')()
const SettingsUpdateProfileRouteLazyImport = createFileRoute(
  '/settings/update-profile',
)()
const SettingsUpdatePasswordRouteLazyImport = createFileRoute(
  '/settings/update-password',
)()
const AuthSignUpRouteLazyImport = createFileRoute('/auth/sign-up')()
const AuthSignInRouteLazyImport = createFileRoute('/auth/sign-in')()
const AuthForgotPasswordRouteLazyImport = createFileRoute(
  '/auth/forgot-password',
)()

// Create/Update Routes

const ProfileRouteLazyRoute = ProfileRouteLazyImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./@routes/profile.route.lazy').then((d) => d.Route),
)

const AboutRouteLazyRoute = AboutRouteLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./@routes/about.route.lazy').then((d) => d.Route))

const IndexRouteLazyRoute = IndexRouteLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./@routes/index.route.lazy').then((d) => d.Route))

const SettingsIndexRouteLazyRoute = SettingsIndexRouteLazyImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./@routes/settings/index.route.lazy').then((d) => d.Route),
)

const SettingsUpdateProfileRouteLazyRoute =
  SettingsUpdateProfileRouteLazyImport.update({
    id: '/settings/update-profile',
    path: '/settings/update-profile',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./@routes/settings/update-profile.route.lazy').then((d) => d.Route),
  )

const SettingsUpdatePasswordRouteLazyRoute =
  SettingsUpdatePasswordRouteLazyImport.update({
    id: '/settings/update-password',
    path: '/settings/update-password',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./@routes/settings/update-password.route.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthSignUpRouteLazyRoute = AuthSignUpRouteLazyImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./@routes/auth/sign-up.route.lazy').then((d) => d.Route),
)

const AuthSignInRouteLazyRoute = AuthSignInRouteLazyImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./@routes/auth/sign-in.route.lazy').then((d) => d.Route),
)

const AuthForgotPasswordRouteLazyRoute =
  AuthForgotPasswordRouteLazyImport.update({
    id: '/auth/forgot-password',
    path: '/auth/forgot-password',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./@routes/auth/forgot-password.route.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings/update-password': {
      id: '/settings/update-password'
      path: '/settings/update-password'
      fullPath: '/settings/update-password'
      preLoaderRoute: typeof SettingsUpdatePasswordRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings/update-profile': {
      id: '/settings/update-profile'
      path: '/settings/update-profile'
      fullPath: '/settings/update-profile'
      preLoaderRoute: typeof SettingsUpdateProfileRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexRouteLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRouteLazyRoute
  '/about': typeof AboutRouteLazyRoute
  '/profile': typeof ProfileRouteLazyRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRouteLazyRoute
  '/auth/sign-in': typeof AuthSignInRouteLazyRoute
  '/auth/sign-up': typeof AuthSignUpRouteLazyRoute
  '/settings/update-password': typeof SettingsUpdatePasswordRouteLazyRoute
  '/settings/update-profile': typeof SettingsUpdateProfileRouteLazyRoute
  '/settings': typeof SettingsIndexRouteLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRouteLazyRoute
  '/about': typeof AboutRouteLazyRoute
  '/profile': typeof ProfileRouteLazyRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRouteLazyRoute
  '/auth/sign-in': typeof AuthSignInRouteLazyRoute
  '/auth/sign-up': typeof AuthSignUpRouteLazyRoute
  '/settings/update-password': typeof SettingsUpdatePasswordRouteLazyRoute
  '/settings/update-profile': typeof SettingsUpdateProfileRouteLazyRoute
  '/settings': typeof SettingsIndexRouteLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRouteLazyRoute
  '/about': typeof AboutRouteLazyRoute
  '/profile': typeof ProfileRouteLazyRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRouteLazyRoute
  '/auth/sign-in': typeof AuthSignInRouteLazyRoute
  '/auth/sign-up': typeof AuthSignUpRouteLazyRoute
  '/settings/update-password': typeof SettingsUpdatePasswordRouteLazyRoute
  '/settings/update-profile': typeof SettingsUpdateProfileRouteLazyRoute
  '/settings/': typeof SettingsIndexRouteLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/profile'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/settings/update-password'
    | '/settings/update-profile'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/profile'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/settings/update-password'
    | '/settings/update-profile'
    | '/settings'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/profile'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/settings/update-password'
    | '/settings/update-profile'
    | '/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRouteLazyRoute: typeof IndexRouteLazyRoute
  AboutRouteLazyRoute: typeof AboutRouteLazyRoute
  ProfileRouteLazyRoute: typeof ProfileRouteLazyRoute
  AuthForgotPasswordRouteLazyRoute: typeof AuthForgotPasswordRouteLazyRoute
  AuthSignInRouteLazyRoute: typeof AuthSignInRouteLazyRoute
  AuthSignUpRouteLazyRoute: typeof AuthSignUpRouteLazyRoute
  SettingsUpdatePasswordRouteLazyRoute: typeof SettingsUpdatePasswordRouteLazyRoute
  SettingsUpdateProfileRouteLazyRoute: typeof SettingsUpdateProfileRouteLazyRoute
  SettingsIndexRouteLazyRoute: typeof SettingsIndexRouteLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRouteLazyRoute: IndexRouteLazyRoute,
  AboutRouteLazyRoute: AboutRouteLazyRoute,
  ProfileRouteLazyRoute: ProfileRouteLazyRoute,
  AuthForgotPasswordRouteLazyRoute: AuthForgotPasswordRouteLazyRoute,
  AuthSignInRouteLazyRoute: AuthSignInRouteLazyRoute,
  AuthSignUpRouteLazyRoute: AuthSignUpRouteLazyRoute,
  SettingsUpdatePasswordRouteLazyRoute: SettingsUpdatePasswordRouteLazyRoute,
  SettingsUpdateProfileRouteLazyRoute: SettingsUpdateProfileRouteLazyRoute,
  SettingsIndexRouteLazyRoute: SettingsIndexRouteLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/profile",
        "/auth/forgot-password",
        "/auth/sign-in",
        "/auth/sign-up",
        "/settings/update-password",
        "/settings/update-profile",
        "/settings/"
      ]
    },
    "/": {
      "filePath": "index.route.lazy.tsx"
    },
    "/about": {
      "filePath": "about.route.lazy.tsx"
    },
    "/profile": {
      "filePath": "profile.route.lazy.tsx"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.route.lazy.tsx"
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.route.lazy.tsx"
    },
    "/auth/sign-up": {
      "filePath": "auth/sign-up.route.lazy.tsx"
    },
    "/settings/update-password": {
      "filePath": "settings/update-password.route.lazy.tsx"
    },
    "/settings/update-profile": {
      "filePath": "settings/update-profile.route.lazy.tsx"
    },
    "/settings/": {
      "filePath": "settings/index.route.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
